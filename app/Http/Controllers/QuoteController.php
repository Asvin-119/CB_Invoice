<?php

namespace App\Http\Controllers;

use App\Models\InvoiceSetting;
use App\Models\Quote;
use Illuminate\Http\Request;

class QuoteController extends Controller
{
    public function create()
    {
        // Get the first settings record, or create a default one if it doesn't exist
        $settings = InvoiceSetting::firstOrCreate([
            'prefix' => 'INV-',
            'next_number' => 1,
            'auto_generate' => true
        ]);

        // Generate auto-invoice ID if auto-generate is enabled
        $autoGeneratedId = null;
        if ($settings->auto_generate) {
            $autoGeneratedId = $settings->prefix . str_pad($settings->next_number, 6, '0', STR_PAD_LEFT);
        }

        return view('invoices.create', compact('autoGeneratedId', 'settings'));
    }


    public function store(Request $request)
    {
        $request->validate([
            'invoice_number' => 'required|string|max:255|unique:invoices,invoice_number',
        ]);

        Quote::create([
            'invoice_number' => $request->invoice_number,
        ]);

        // Update next number in settings
        $settings = InvoiceSetting::first();
        if ($settings->auto_generate) {
            $settings->next_number += 1;
            $settings->save();
        }

        return redirect()->back()->with('success', 'Invoice created successfully!');
    }

    public function updateSettings(Request $request)
    {
        $settings = InvoiceSetting::first();
        $settings->update([
            'prefix' => $request->prefix,
            'next_number' => $request->next_number,
            'auto_generate' => $request->has('auto_generate'),
        ]);

        return redirect()->back()->with('success', 'Invoice settings updated successfully!');
    }

}
